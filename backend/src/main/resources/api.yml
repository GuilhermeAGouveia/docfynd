openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Docfynd API"
  description: Initial example to submit Elasticsearch queries

paths:
  /docs:
    get:
      summary: "Count docs in Docfynd database"
      operationId: countDocs
      tags:
        - countDocs
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: number

        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /search:
    post:
      summary: "Submits a query with filters to Elasticsearch"
      operationId: searchWithFilter
      tags:
        - search
      parameters:
        - name: query
          in: query
          description: Query to be submitted
          schema:
            type: string
        - name: page
          in: query
          description: Query to be submitted
          schema:
            type: integer
        - name: limit
          in: query
          description: Query to be submitted
          schema:
            type: integer
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: "Submits a query to Elasticsearch"
      operationId: search
      tags:
        - search
      parameters:
        - name: query
          in: query
          description: Query to be submitted
          schema:
            type: string
        - name: page
          in: query
          description: Query to be submitted
          schema:
            type: integer
        - name: limit
          in: query
          description: Query to be submitted
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page"
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Filter:
      type: object
      properties:
        orderBy:
          type: string
          enum: [asc, desc]
        sortBy:
          type: string
          enum: [relevance, date, access]
        sinceYear:
          type: integer
    Keyword:
      type: object
      properties:
        text:
          type: string
        dbpedia_resource:
          type: string
    Page:
      type: object
      properties:
        total:
          type: integer
        took:
          type: integer
        data:
          type: array
          items:
            $ref: "#/components/schemas/Result"
    Result:
      type: object
      properties:
        title:
          type: string
        url:
          type: string
        abs:
          type: string
        highlight_abs:
          type: string
        createdAt:
          type: string
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2020-02-28"
        keywords:
          type: array
          items:
            $ref: "#/components/schemas/Keyword"
        reading_time:
          type: integer
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
